name: Rust Multi-Platform CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
        target: 
          - x86_64-unknown-linux-gnu  # Linux 目标
          - x86_64-pc-windows-msvc    # Windows 目标
          - x86_64-apple-darwin       # macOS 目标
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive-name: release-linux.zip
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive-name: release-windows.zip
          - os: macos-latest
            target: x86_64-apple-darwin
            archive-name: release-macos.zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: rust-lang/setup-rust@v1
        with:
          rust-version: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - name: Build binary
        shell: pwsh
        run: |
          cd ./License-learning
          cargo build --verbose --release --target ${{ matrix.target }}
          cd ../
          cd ./Node
          cargo build --verbose --release --target ${{ matrix.target }}
          cd ../
        env:
          RUST_BACKTRACE: 1

      - name: Build archive
        shell: pwsh
        run: |
          mkdir -p archive
          if ("${{ runner.os }}" -eq "Windows") {
            cp "./Node/target/${{ matrix.target }}/release/node_inject.exe" ./archive/
            cp "./License-learning/target/${{ matrix.target }}/release/license-learning.exe" ./archive/
          } else {
            cp "./Node/target/${{ matrix.target }}/release/node_inject" ./archive/
            cp "./License-learning/target/${{ matrix.target }}/release/license-learning" ./archive/
          }
          cd archive
          zip "${{ matrix.archive-name }}" *

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: archive/${{ matrix.archive-name }}
