name: Build and Package
on:
  workflow_dispatch: {}

jobs:
  build:
    name: Build and Package
    runs-on: windows-2019

    strategy:
      matrix:
        rust: [stable]
        target: [x86_64-pc-windows-msvc]
        
    steps:
    - name: Checkout Repositories
      uses: actions/checkout@v4
      with:
        path: './'
        
    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        profile: minimal
        default: true
        
    - name: Build Binaries and Archive
      shell: bash
      run: |
        # Build License-learning
        cd ./License-learning
        cargo build --verbose --release --target ${{ matrix.target }}
        # Build Node
        cd ../Node
        cargo build --verbose --release --target ${{ matrix.target }}
        # Prepare Archive (ZIP)
        mkdir -p archive
        cp "./Node/target/${{ matrix.target }}/release/node_inject.exe" ./archive/
        cp "./License-learning/target/${{ matrix.target }}/release/license-learning.exe" ./archive/
        cd archive
        zip -r "${{ matrix.archive-name }}" ./*
      env:
        RUST_BACKTRACE: 1
        
    - name: Upload Archive
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.archive-name }}
        path: archive/${{ matrix.archive-name }}
